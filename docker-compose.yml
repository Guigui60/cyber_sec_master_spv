name: "WORKFLOW"
services:
  #### Attacker (simulation d'attaque) ####
  attacker:
    build:
      context: ./attacker
      dockerfile: ../docker/Dockerfile.attack
    container_name: attack-simulator
    networks:
      - prod_net
    depends_on:
      fail2ban:
        condition: service_healthy
    restart: "no" 
  
  #### Dashboard Flask Fail2Ban ####
  fail2ban-dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    container_name: fail2ban-dashboard
    ports:
      - "5000:5000"
    mem_limit: 512m 
    volumes:
      - ./production/nginx/logs:/var/log/nginx:ro
      - fail2ban-socket:/var/run/fail2ban
    depends_on:
      fail2ban:
        condition: service_healthy
    networks:
      - prod_net
  
  #### Fluentd pour logs ####
  fluentd:
    image: fluent/fluentd:v1.14-1
    container_name: log-collector
    volumes:
      - ./production/nginx/logs:/fluentd/log/nginx
      - ./fluentd/fluentd.conf:/fluentd/etc/fluentd.conf
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    networks:
      - prod_net
  
  #### Fail2Ban ####
  fail2ban:
    image: crazymax/fail2ban:latest
    container_name: security-fail2ban
    cap_add:
      - NET_ADMIN
      - NET_RAW
    volumes:
      - ./production/nginx/logs:/var/log/nginx:ro
      - ./production/fail2ban:/etc/fail2ban/jail.d:ro
      - fail2ban-socket:/var/run/fail2ban
    restart: unless-stopped
    depends_on:
      - nginx
    networks:
      - prod_net
    healthcheck:
      test: ["CMD", "fail2ban-client", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
  
  #### Load Balancer Nginx ####
  nginx:
    image: nginx:latest
    container_name: lb-nginx
    ports:
      - "8080:80"
    volumes:
      - ./production/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./attacker/.htpasswd:/etc/nginx/.htpasswd:ro
      - ./production/nginx/logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - prod_net
  
  #### Application cible ####
  app:
    image: httpd:alpine
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    networks:
      - prod_net

networks:
  prod_net:
    driver: bridge

volumes:
  fail2ban-socket: